<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--&lt;!&ndash;该日志将日志级别不同的log信息保存到不同的文件中 &ndash;&gt;-->
<!--<configuration>-->
<!--	<include-->
<!--		resource="org/springframework/boot/logging/logback/defaults.xml" />-->

<!--	&lt;!&ndash; 日志根目录 &ndash;&gt;-->
<!--	<springProperty scope="context" name="LOG_HOME"-->
<!--		source="logging.file.path"/>-->

<!--	<springProperty scope="context" name="springAppName"-->
<!--		source="spring.application.name" />-->

<!--	&lt;!&ndash; 日志在工程中的输出位置 &ndash;&gt;-->
<!--	<property name="LOG_FILE" value="${LOG_HOME}" />-->

<!--	&lt;!&ndash; 日志输出样式 &ndash;&gt;-->
<!--	<property name="LOG_PATTERN"-->
<!--		value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(-&#45;&#45;){faint} %clr([%15.15t]){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />-->

<!--	&lt;!&ndash; 控制台输出 &ndash;&gt;-->
<!--	<appender name="console"-->
<!--		class="ch.qos.logback.core.ConsoleAppender">-->
<!--		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
<!--			<level>W</level>-->
<!--		</filter>-->
<!--		&lt;!&ndash; 日志输出编码 &ndash;&gt;-->
<!--		<encoder>-->
<!--			<pattern>${LOG_PATTERN}</pattern>-->
<!--			<charset>utf8</charset>-->
<!--		</encoder>-->
<!--	</appender>-->

	<!-- 按照每天生成日志文件 -->
<!--	<appender name="file"-->
<!--		class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--		<rollingPolicy-->
<!--			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--			&lt;!&ndash;日志文件输出的文件名 &ndash;&gt;-->
<!--			<FileNamePattern>${LOG_HOME}/console.%d{yyyy-MM-dd}.%i.log-->
<!--			</FileNamePattern>-->
<!--			&lt;!&ndash;日志文件保留天数 &ndash;&gt;-->
<!--			<MaxHistory>15</MaxHistory>-->
<!--			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <maxFileSize>100MB</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--		</rollingPolicy>-->
<!--		<encoder-->
<!--			class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--			<pattern>${LOG_PATTERN}</pattern>-->
<!--		</encoder>-->
<!--	</appender>-->
	
	<!--druid慢查询日志输出，没有使用druid监控的去掉这部分以及下面的一个相关logger-->
<!--    <appender name="Druid_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
<!--        <file>${LOG_HOME}/log_druid.log</file>-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            <fileNamePattern>${LOG_HOME}/log-druid-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <maxFileSize>50MB</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--        &lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
<!--        <append>true</append>-->
        <!-- 日志文件的格式 -->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %logger Line:%-3L - %msg%n</pattern>-->
<!--            <charset>utf-8</charset>-->
<!--        </encoder>-->
<!--        &lt;!&ndash;过滤日志&ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>ERROR</level>-->
<!--        </filter>-->
<!--    </appender>-->
<!--    &lt;!&ndash;druid相关logger，additivity="false" 设置打印信息行为不向上级传递&ndash;&gt;-->
<!--    <logger name="com.alibaba.druid.filter.stat.StatFilter" level="ERROR" additivity="false">-->
<!--        <appender-ref ref="Druid_FILE" />-->
<!--    </logger>-->

<!--	&lt;!&ndash; 异步输出 &ndash;&gt;-->
<!--	<appender name="FILE_ASYNC" class="ch.qos.logback.classic.AsyncAppender">-->
<!--		&lt;!&ndash; 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 &ndash;&gt;-->
<!--		<discardingThreshold>0</discardingThreshold>-->
<!--		&lt;!&ndash; 更改默认的队列的深度,该值会影响性能.默认值为256 &ndash;&gt;-->
<!--		<queueSize>512</queueSize>-->
<!--		&lt;!&ndash; 添加附加的appender,最多只能添加一个 &ndash;&gt;-->
<!--		<appender-ref ref="file"/>-->
<!--	</appender>-->

<!--	<springProfile name="local">-->
<!--		&lt;!&ndash; 日志输出级别 &ndash;&gt;-->
<!--		<root level="INFO">-->
<!--			<appender-ref ref="console" />-->
<!--			<appender-ref ref="FILE_ASYNC" />-->
<!--		</root>-->
<!--	</springProfile>-->

<!--	<springProfile name="dev">-->
<!--		&lt;!&ndash; 日志输出级别 &ndash;&gt;-->
<!--		<root level="INFO">-->
<!--			<appender-ref ref="console" />-->
<!--			<appender-ref ref="FILE_ASYNC" />-->
<!--		</root>-->
<!--	</springProfile>-->
<!--	<springProfile name="uat">-->
<!--		&lt;!&ndash; 日志输出级别 &ndash;&gt;-->
<!--		<root level="INFO">-->
<!--			<appender-ref ref="console" />-->
<!--			<appender-ref ref="FILE_ASYNC" />-->
<!--		</root>-->
<!--	</springProfile>-->
<!--	<springProfile name="aliyun">-->
<!--		&lt;!&ndash; 日志输出级别 &ndash;&gt;-->
<!--		<root level="INFO">-->
<!--			<appender-ref ref="console" />-->
<!--		</root>-->
<!--	</springProfile>-->
<!--	<springProfile name="prd">-->
<!--		&lt;!&ndash; 日志输出级别 &ndash;&gt;-->
<!--		<root level="INFO">-->
<!--			<appender-ref ref="FILE_ASYNC" />-->
<!--		</root>-->
<!--	</springProfile>-->
</configuration>